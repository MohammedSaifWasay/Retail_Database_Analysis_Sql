<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Mohammed Saif Wasay/Desktop/retailDB.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser query pragmas" current="2"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2748"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,9:mainInventory"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Categories" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="108"/><column index="2" value="172"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="113"/><column index="2" value="141"/><column index="3" value="180"/><column index="4" value="187"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Employees" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="114"/><column index="2" value="153"/><column index="3" value="179"/><column index="4" value="180"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Inventory" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="98"/><column index="2" value="153"/><column index="3" value="115"/><column index="4" value="118"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Products" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="98"/><column index="2" value="174"/><column index="3" value="52"/><column index="4" value="108"/><column index="5" value="118"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Sales" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="131"/><column index="2" value="162"/><column index="3" value="98"/><column index="4" value="114"/><column index="5" value="150"/><column index="6" value="113"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- Create Products Table
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(255),
    Price DECIMAL(10, 2),
    CategoryID INT,
    SupplierInfo VARCHAR(255),
    FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID)
);

-- Create Employees Table
CREATE TABLE Employees (
    EmployeeID INT PRIMARY KEY,
    Employee_Name VARCHAR(255),
    Role VARCHAR(255),
    ContactInformation VARCHAR(255)
);

-- Create Customers Table
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    CustomerName VARCHAR(255),
    ContactInformation VARCHAR(255),
    PurchaseHistory TEXT
);

-- Create Sales Table
CREATE TABLE Sales (
    TransactionID INT PRIMARY KEY,
    DateTime DATETIME,
    ProductID INT,
    EmployeeID INT,
    PaymentMethod VARCHAR(255),
    CustomerID INT,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID),
    FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- Create Inventory Table
CREATE TABLE Inventory (
    ProductID INT PRIMARY KEY,
    QuantityOnHand INT,
    RecordPoint INT,
    SupplierInfo VARCHAR(255),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);

-- Create Categories Table
CREATE TABLE Categories (
    CategoryID INT PRIMARY KEY,
    CategoryName VARCHAR(255)
);

-- Insert values into Products Table
INSERT INTO Products (ProductID, ProductName, Price, CategoryID, SupplierInfo)
VALUES
(1, 'Laptop', 1200.00, 1, 'SupplierA'),
(2, 'Smartphone', 800.00, 1, 'SupplierB'),
(3, 'Printer', 300.00, 2, 'SupplierC'),
(4, 'Tablet', 500.00, 1, 'SupplierD'),
(5, 'Desktop Computer', 1500.00, 1, 'SupplierE'),
(6, 'Wireless Mouse', 25.00, 2, 'SupplierF'),
(7, 'External Hard Drive', 120.00, 3, 'SupplierG'),
(8, 'Office Chair', 200.00, 4, 'SupplierH'),
(9, 'Coffee Maker', 40.00, 5, 'SupplierI'),
(10, 'Fitness Tracker', 80.00, 6, 'SupplierJ'),
(11, 'Notebook', 15.00, 7, 'SupplierK'),
(12, 'Bluetooth Headphones', 60.00, 8, 'SupplierL'),
(13, 'Desk Lamp', 30.00, 4, 'SupplierM'),
(14, 'Backpack', 50.00, 7, 'SupplierN'),
(15, 'Smartwatch', 100.00, 6, 'SupplierO'),
(16, 'Projector', 700.00, 2, 'SupplierP'),
(17, 'Printer Ink Cartridges', 40.00, 2, 'SupplierQ'),
(18, 'External SSD', 180.00, 3, 'SupplierR');

-- Insert values into Employees Table
INSERT INTO Employees (EmployeeID, Employee_Name, Role, ContactInformation)
VALUES
(1, 'John Doe', 'Manager', '123-456-7890'),
(2, 'Jane Smith', 'Sales Rep', '987-654-3210'),
(3, 'Robert Johnson', 'IT Specialist', '555-123-4567'),
(4, 'Emily Davis', 'Marketing Coordinator', '444-789-0123'),
(5, 'Michael Brown', 'Customer Support', '777-234-5678'),
(6, 'Samantha White', 'Data Analyst', '888-345-6789'),
(7, 'David Miller', 'Researcher', '999-456-7890'),
(8, 'Amanda Wilson', 'HR Manager', '111-567-8901'),
(9, 'Christopher Lee', 'Software Engineer', '222-678-9012'),
(10, 'Olivia Taylor', 'Finance Analyst', '333-789-0123'),
(11, 'Daniel Garcia', 'Product Manager', '444-890-1234'),
(12, 'Sophia Martinez', 'Quality Assurance', '555-901-2345'),
(13, 'Liam Thomas', 'Graphic Designer', '666-012-3456'),
(14, 'Ava Harris', 'Operations Coordinator', '777-123-4567'),
(15, 'Ethan Rodriguez', 'Business Development', '888-234-5678'),
(16, 'Mia Jackson', 'Event Planner', '999-345-6789');

-- Insert values into Customers Table
INSERT INTO Customers (CustomerID, CustomerName, ContactInformation, PurchaseHistory)
VALUES
(1, 'Customer1', '111-222-3333', 'Purchase1, Purchase2'),
(2, 'Customer2', '444-555-6666', 'Purchase3, Purchase4'),
(3, 'Customer3', '777-888-9999', 'Purchase5, Purchase6'),
(4, 'Customer4', '111-234-5678', 'Purchase7, Purchase8'),
(5, 'Customer5', '555-678-9012', 'Purchase9, Purchase10'),
(6, 'Customer6', '999-345-6789', 'Purchase11, Purchase12'),
(7, 'Customer7', '333-456-7890', 'Purchase13, Purchase14'),
(8, 'Customer8', '666-567-8901', 'Purchase15, Purchase16'),
(9, 'Customer9', '222-678-9012', 'Purchase17, Purchase18'),
(10, 'Customer10', '888-789-0123', 'Purchase19, Purchase20'),
(11, 'Customer11', '444-890-1234', 'Purchase21, Purchase22'),
(12, 'Customer12', '777-901-2345', 'Purchase23, Purchase24'),
(13, 'Customer13', '111-012-3456', 'Purchase25, Purchase26'),
(14, 'Customer14', '555-123-4567', 'Purchase27, Purchase28'),
(15, 'Customer15', '999-234-5678', 'Purchase29, Purchase30');

-- Insert values into Sales Table
INSERT INTO Sales (TransactionID, DateTime, ProductID, EmployeeID, PaymentMethod, CustomerID)
VALUES
(1, '2023-01-01 08:00:00', 1, 1, 'Credit Card', 1),
(2, '2023-01-02 10:30:00', 2, 2, 'Cash', 2),
(3, '2023-01-03 12:15:00', 3, 3, 'Credit Card', 3),
(4, '2023-01-04 14:45:00', 4, 4, 'Cash', 4),
(5, '2023-01-05 16:30:00', 5, 5, 'Credit Card', 5),
(6, '2023-01-06 09:45:00', 6, 6, 'Cash', 6),
(7, '2023-01-07 11:30:00', 7, 7, 'Credit Card', 7),
(8, '2023-01-08 13:00:00', 8, 8, 'Cash', 8),
(9, '2023-01-09 15:45:00', 9, 9, 'Credit Card', 9),
(10, '2023-01-10 17:30:00', 10, 10, 'Cash', 10),
(11, '2023-01-11 08:30:00', 11, 11, 'Credit Card', 11),
(12, '2023-01-12 10:00:00', 12, 12, 'Cash', 12),
(13, '2023-01-13 12:45:00', 13, 13, 'Credit Card', 13),
(14, '2023-01-14 14:15:00', 14, 14, 'Cash', 14),
(15, '2023-01-15 16:00:00', 15, 15, 'Credit Card', 15),
(16, '2023-01-16 09:15:00', 16, 1, 'Cash', 1),
(17, '2023-01-17 11:00:00', 17, 2, 'Credit Card', 2);

-- Insert values into Inventory Table
INSERT INTO Inventory (ProductID, QuantityOnHand, RecordPoint, SupplierInfo)
VALUES
(1, 50, 10, 'SupplierA'),
(2, 100, 20, 'SupplierB'),
(3, 30, 15, 'SupplierC'),
(4, 75, 25, 'SupplierD'),
(5, 90, 30, 'SupplierE'),
(6, 40, 12, 'SupplierF'),
(7, 60, 18, 'SupplierG'),
(8, 25, 8, 'SupplierH'),
(9, 35, 10, 'SupplierI'),
(10, 50, 15, 'SupplierJ'),
(11, 20, 5, 'SupplierK'),
(12, 55, 22, 'SupplierL'),
(13, 15, 4, 'SupplierM'),
(14, 45, 17, 'SupplierN'),
(15, 80, 28, 'SupplierO'),
(16, 65, 21, 'SupplierP'),
(17, 10, 3, 'SupplierQ');

-- Insert values into Categories Table
INSERT INTO Categories (CategoryID, CategoryName)
VALUES
(1, 'Electronics'),
(2, 'Office Supplies'),
(3, 'Home Appliances'),
(4, 'Furniture'),
(5, 'Fitness and Health'),
(6, 'Fashion Accessories'),
(7, 'Stationery'),
(8, 'Audio and Sound'),
(9, 'Lighting'),
(10, 'Bags and Luggage'),
(11, 'Smart Devices'),
(12, 'Printers and Scanners'),
(13, 'Computer Accessories'),
(14, 'Kitchen Appliances'),
(15, 'Gadgets and Gizmos'),
(16, 'Home Decor');




--Calculating the total sales amount for each product?
--Joining Product table and Sales table
SELECT 
    P.ProductID,
    P.ProductName,
    SUM(P.Price) AS TotalSalesAmount
FROM 
    Sales S
JOIN 
    Products P ON S.ProductID = P.ProductID
GROUP BY 
    P.ProductID, P.ProductName;
	
--Display the Transaction Id's of persons holding credit card?
--Joining Customer table and Sales table 
SELECT 
   c.CustomerName,
   c.CustomerID,
   c.ContactInformation,
   s.TransactionID, 
   s.PaymentMethod
from 
   sales as s 
JOIN 
   Customers as c ON s.CustomerID=c.CustomerID 
WHERE 
   PaymentMethod='Credit Card';	


--Retrieve sales transactions for a specific  ProductID NO:1 and a specific payment method let's say 'Credit Card'?
-- Selecting filtered data with WHERE clause
SELECT 
    S.TransactionID,
    S.DateTime,
    P.ProductName,
    E.Employee_Name,
    S.PaymentMethod,
    C.CustomerName,
    I.QuantityOnHand
FROM 
    Sales S
JOIN 
    Products P ON S.ProductID = P.ProductID
JOIN 
    Employees E ON S.EmployeeID = E.EmployeeID
JOIN 
    Customers C ON S.CustomerID = C.CustomerID
JOIN 
    Inventory I ON S.ProductID = I.ProductID
WHERE 
    P.ProductID = 1
    AND S.PaymentMethod = 'Credit Card';

--Show the Quantity on Hand and display the Products associated with different suppliers?
SELECT 
    p.ProductID,
	p.ProductName,
	i.QuantityOnHand, 
	s.PaymentMethod, 
	i.SupplierInfo
FROM 
    Products as p 
JOIN 
    Inventory as i ON p.SupplierInfo=i.SupplierInfo
JOIN 
     sales as s ON s.ProductID=p.ProductID;

--Retrieve sales transactions for a product where the quantity on hand in the inventory is less than a certain threshold (let's say 50):

-- Selecting data using subquery
SELECT 
    S.TransactionID,
    S.DateTime,
    P.ProductName,
    E.Employee_Name,
    S.PaymentMethod,
    C.CustomerName,
    I.QuantityOnHand
FROM 
    Sales S
JOIN 
    Products P ON S.ProductID = P.ProductID
JOIN 
    Employees E ON S.EmployeeID = E.EmployeeID
JOIN 
    Customers C ON S.CustomerID = C.CustomerID
JOIN 
    Inventory I ON S.ProductID = I.ProductID
WHERE 
    P.ProductID IN (
        SELECT ProductID
        FROM Inventory
        WHERE QuantityOnHand &lt; 50);
		
-- Find the average price of products and then finding the sales transactions where the product price is above the average?
-- Selecting data using subquery for comparison
SELECT 
    S.TransactionID,
    S.DateTime,
    P.ProductName,
    E.Employee_Name,
    S.PaymentMethod,
    C.CustomerName,
    I.QuantityOnHand
FROM 
    Sales S
JOIN 
    Products P ON S.ProductID = P.ProductID
JOIN 
    Employees E ON S.EmployeeID = E.EmployeeID
JOIN 
    Customers C ON S.CustomerID = C.CustomerID
JOIN 
    Inventory I ON S.ProductID = I.ProductID
WHERE 
    P.Price &gt; (
        SELECT AVG(Price)
        FROM Products);</sql><current_tab id="0"/></tab_sql></sqlb_project>
